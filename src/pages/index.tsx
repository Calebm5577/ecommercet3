import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
// import xyz from "../images/nike/Air Jordan 1 Low/black.webp";
import asdf from "./images2/dog.jpeg";
import Image from "next/image";
// import images from "../../public/images/adidas/Adifom SLTN Shoes"

import { api } from "../utils/api";

//for dealing with images
import path from "path";
import { promises as fs } from "fs";
import { caller } from "../server/api/routers/example";

//import images function
// function importAll(r: any) {
//   return r.keys().map(r);
// }

// const images = importAll(require.context("./", false, /\.(png|jpe?g|svg)$/));

// console.log(imageFilenames);

// const GalleryPage = () => {
//   let imageDirectory = path.join(process.cwd(), "/public/images");
//   let imageFilenames;

//   let myasync = async () => {
//     imageFilenames = await fs.readdir(imageDirectory);
//   };

//   myasync();

//   if (imageFilenames) {
//     console.log("some image filenames");
//     console.log(imageFilenames);
//   }

//   return (
//     <div>
//       <div>
//         {/* <Title Name='Gallery' Title={'Proof of Concept'} />
//               <Gallery images={imageFilenames} /> */}
//         hello
//       </div>
//     </div>
//   );
// };

const Home: NextPage = ({ imageFilenames, test }) => {
  console.log("props");
  console.log(imageFilenames);
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  console.log("test test");
  console.log(test);

  const getItems = api.example.getItems.useQuery();
  console.log("getItems.data");
  console.log(getItems.data);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {/* {hello.data ? hello.data.greeting : "Loading tRPC query..."} */}
            </p>
            {/* <AuthShowcase /> */}
            <div>
              {imageFilenames
                ? imageFilenames.map((image) => {
                    console.log("image");
                    console.log(image);
                    if (image != "extras") {
                      return (
                        <div>
                          <h1>Muh Image</h1>
                          <Image
                            alt="shoe"
                            src={`/images/nike/Air Jordan 1 Low/${image}`}
                            height="200"
                            width="200"
                          />
                        </div>
                      );
                    }
                  })
                : ""}
            </div>
          </div>
        </div>

        {/* {getItems.data?.map((item) => {
          return (
            <div>
              <h1>{item.name}</h1>
              <h2>{item.brand}</h2>
              <Image
                alt="shoe"
                src={`/${item.main}/black.webp`}
                height="50"
                width="50"
              />
            </div>
          );
        })} */}

        <img src="./dog.jpeg" />
        <Image alt="shoe" src="/favicon.ico" height="50" width="50" />
        <img src={"/images/nike/Air Jordan 1 Low/black.webp"} />
        {/* <GalleryPage /> */}
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };

export async function getServerSideProps() {
  // const getItems = api.example.getItems.useQuery();
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  // console.log("getItems");
  // console.log(getItems);
  // let test = await caller.hello({ text: "hey" });
  let test = await caller.getItems();
  console.log("text");
  console.log(test);

  // if (test) {

  let imageFilenames: String[] = [];

  test.map((shoe) => {
    console.log(`shoe ${JSON.stringify(shoe.main)}`);

    imageFilenames.push(path.join(process.cwd(), `/public/${shoe.main}`));
  });

  // const imageFilenames: String[][] = await fs.readdir(imageDirectory);
  console.log("images special");
  console.log(imageFilenames);
  // }
  // console.log("imageFilenames");
  // console.log(imageFilenames);

  // Fetch data from external API
  // const res = await fetch(`https://.../data`)
  // const data = await res.json()

  // Pass data to the page via props
  return { props: { imageFilenames, test, sheesh: "sheesh" } };
}
